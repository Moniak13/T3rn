#!/bin/bash

# Set variables
REPO_API="https://api.github.com/repos/t3rn/executor-release/releases/latest"
ARCHIVE_NAME="executor-latest.tar.gz"
DOWNLOAD_FOLDER="executor"
# Clean up any existing files or folders
if [[ -f "$ARCHIVE_NAME" ]]; then
    echo "Removing existing archive: $ARCHIVE_NAME"
    rm -f "$ARCHIVE_NAME"
fi

if [[ -d "$DOWNLOAD_FOLDER" ]]; then
    echo "Removing existing folder: $DOWNLOAD_FOLDER"
    rm -rf "$DOWNLOAD_FOLDER"
fi

# Fetch the latest tag from GitHub API
echo "Fetching the latest release tag..."
LATEST_TAG=$(curl -s "$REPO_API" | grep -Po '"tag_name": "\K.*?(?=")')

if [[ -z "$LATEST_TAG" ]]; then
    echo "Error: Failed to fetch the latest release tag. Please check your network or repository API access."
    exit 1
fi

# Download the latest tarball
DOWNLOAD_URL="https://github.com/t3rn/executor-release/releases/download/${LATEST_TAG}/executor-linux-${LATEST_TAG}.tar.gz"
echo "Downloading the latest version from: $DOWNLOAD_URL"
wget -O "$ARCHIVE_NAME" "$DOWNLOAD_URL"

if [[ $? -ne 0 ]]; then
    echo "Error: Failed to download the tarball. Please check the URL or your network connection."
    exit 1
fi 
echo "Download complete: $ARCHIVE_NAME"

# Unpack the tarball
echo "Unpacking the tarball"
tar -xzf "$ARCHIVE_NAME"

if [[ $? -eq 0 ]]; then
    echo "Unpacking complete. The latest version is available in the $DOWNLOAD_FOLDER directory."
else
    echo "Error: Failed to unpack the tarball."
    exit 1
fi

# Create the t3rnAutorestart.sh script in the appropriate directory
autorestart_file="$DOWNLOAD_FOLDER/executor/bin/t3rnAutorestart.sh"
mkdir -p "$(dirname "$autorestart_file")"
echo "Creating t3rnAutorestart.sh..."
cat << 'EOF' > "$autorestart_file"
#!/bin/bash

while true; do
    echo "Starting Executor..."

    ./executor &

    executor_pid=$!

    tail -f executor.log | while read line; do
        # Verify if "_bootstrapPoll: null" 
        if echo "$line" | grep -q "_bootstrapPoll: null"; then
            echo "Crash detected ('_bootstrapPoll: null'). Restarting..."
            kill $executor_pid
            break
        fi 
done

    wait $executor_pid

    echo "Restarting Executor in 5 seconds..."
    sleep 5
done
EOF

chmod +x "$autorestart_file"
echo "t3rnAutorestart.sh script created at $autorestart_file"

# Optional: Cleanup the tarball
# Uncomment the line below if you want to delete the tarball after unpacking
# rm "$ARCHIVE_NAME"

# Move to the binary executor directory
cd executor/executor/bin || { echo "Directory not found!"; exit 1; }

# Request manual input for PRIVATE_KEY_LOCAL
echo -n "Enter PRIVATE KEY: "
read PRIVATE_KEY_LOCAL  # Input is visible as it is typed
echo "Your PRIVATE KEY: $PRIVATE_KEY_LOCAL"

# Request manual input for ACLHEMY RPC API
echo -n "Enter Your API KEY : "
read KEYBLASTAPI  # Input is visible as it is typed

# Check if KEYBLASTAPI is empty
if [ -z "$KEYBLASTAPI" ]; then
  echo "Your API KEY is empty, bypassing the RPC endpoint configuration for Blastapi.io."
else
  echo "Your API KEY: $KEYBLASTAPI"
  export RPC_ENDPOINTS_ARBT="https://arbitrum-sepolia.blastapi.io/$KEYBLASTAPI,https://arbitrum-sepolia-rpc.publicnode.com"
  export RPC_ENDPOINTS_BSSP="https://base-sepolia.blastapi.io/$KEYBLASTAPI,https://sepolia.base.org"
  export RPC_ENDPOINTS_BLSS="https://blastl2-sepolia.blastapi.io/$KEYBLASTAPI,https://sepolia.blast.io"
  export RPC_ENDPOINTS_OPSP="https://optimism-sepolia.blastapi.io/$KEYBLASTAPI,https://sepolia.optimism.io"
fi

# Requesting manual input for EXECUTOR_MAX_L3_GAS_PRICE
echo -n "Enter max GAS (Default is 200): "
read EXECUTOR_MAX_L3_GAS_PRICE
fi

echo "GAS PRICE used: $EXECUTOR_MAX_L3_GAS_PRICE"

# Setting up environment variables
export NODE_ENV=testnet
export LOG_LEVEL=debug
export LOG_PRETTY=false
export EXECUTOR_PROCESS_ORDERS=true
export EXECUTOR_PROCESS_CLAIMS=true
export EXECUTOR_PROCESS_PENDING_ORDERS_FROM_API=false
export EXECUTOR_PROCESS_ORDERS_API_ENABLED=false
export EXECUTOR_ENABLE_BATCH_BIDDING=true
export EXECUTOR_PROCESS_BIDS_ENABLED=true
export ENABLED_NETWORKS='arbitrum-sepolia,base-sepolia,blast-sepolia,optimism-sepolia,l1rn'
export PRIVATE_KEY_LOCAL="$PRIVATE_KEY_LOCAL"
export EXECUTOR_MAX_L3_GAS_PRICE="$EXECUTOR_MAX_L3_GAS_PRICE"
export RPC_ENDPOINTS_L1RN='https://brn.rpc.caldera.xyz/,https://brn.calderarpc.com/http'

# Launching t3rnAutorestart.sh
echo -e "Running t3rnAutorestart.sh with current configuration..."
sleep 2
./t3rnAutorestart.sh
